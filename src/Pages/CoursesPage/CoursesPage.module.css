/* From Uiverse.io by PriyanshuGupta28 */
.checkboxWrapper * {
  -webkit-tap-highlight-color: transparent;
  outline: none;
}

.checkboxWrapper input[type="checkbox"] {
  display: none;
}

.checkboxWrapper label {
  --size: 25px;
  --shadow: calc(var(--size) * 0.07) calc(var(--size) * 0.1);
  position: relative;
  display: block;
  width: var(--size);
  height: var(--size);
  margin: 0 auto;
  background-color: #4158d0;
  background-image: linear-gradient(
    43deg,
    #4158d0 0%,
    #c850c0 46%,
    #ffcc70 100%
  );
  border-radius: 50%;
  box-shadow: 0 var(--shadow) #ffbeb8;
  cursor: pointer;
  transition: 0.2s ease transform, 0.2s ease background-color,
    0.2s ease box-shadow;
  overflow: hidden;
  z-index: 1;
}

.checkboxWrapper label:before {
  content: "";
  position: absolute;
  top: 50%;
  right: 0;
  left: 0;
  width: calc(var(--size) * 0.7);
  height: calc(var(--size) * 0.7);
  margin: 0 auto;
  background-color: #fff;
  transform: translateY(-50%);
  border-radius: 50%;
  box-shadow: inset 0 var(--shadow) #ffbeb8;
  transition: 0.2s ease width, 0.2s ease height;
}

.checkboxWrapper label:hover:before {
  width: calc(var(--size) * 0.55);
  height: calc(var(--size) * 0.55);
  box-shadow: inset 0 var(--shadow) #ff9d96;
}

.checkboxWrapper label:active {
  transform: scale(0.9);
}

.checkboxWrapper .tickMark {
  position: absolute;
  top: -1px;
  right: 0;
  left: calc(var(--size) * -0.05);
  width: calc(var(--size) * 0.6);
  height: calc(var(--size) * 0.6);
  margin: 0 auto;
  margin-left: calc(var(--size) * 0.14);
  transform: rotateZ(-40deg);
}

.checkboxWrapper .tickMark:before,
.checkboxWrapper .tickMark:after {
  content: "";
  position: absolute;
  background-color: #fff;
  border-radius: 2px;
  opacity: 0;
  transition: 0.2s ease transform, 0.2s ease opacity;
}

.checkboxWrapper .tickMark:before {
  left: 0;
  bottom: 0;
  width: calc(var(--size) * 0.1);
  height: calc(var(--size) * 0.3);
  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.23);
  transform: translateY(calc(var(--size) * -0.68));
}

.checkboxWrapper .tickMark:after {
  left: 0;
  bottom: 0;
  width: 100%;
  height: calc(var(--size) * 0.1);
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.23);
  transform: translateX(calc(var(--size) * 0.78));
}

.checkboxWrapper input[type="checkbox"]:checked + label {
  background-color: #4158d0;
  background-image: linear-gradient(
    43deg,
    #4158d0 0%,
    #c850c0 46%,
    #ffcc70 100%
  );
  box-shadow: rgba(0, 0, 0, 0.3) 0px 19px 38px,
    rgba(0, 0, 0, 0.22) 0px 15px 12px;
}

.checkboxWrapper input[type="checkbox"]:checked + label:before {
  width: 0;
  height: 0;
}

.checkboxWrapper input[type="checkbox"]:checked + label .tickMark:before,
.checkboxWrapper input[type="checkbox"]:checked + label .tickMark:after {
  transform: translate(0);
  opacity: 1;
}

/*chechBox*/

/* From Uiverse.io by elijahgummer */
/* Hide the default checkbox */
.container1 input {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.container1 {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 20px;
  user-select: none;
  border: 3px solid #beddd0;
  border-radius: 10px;
  overflow: hidden;
}

/* Create a custom checkbox */
.checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 1em;
  width: 1em;
  background-color: #2dc38c;
  border-bottom: 1.5px solid #2dc38c; /* Bottom stroke */
  box-shadow: 0 0 1px #cef1e4, inset 0 -2.5px 3px #62eab8,
    inset 0 3px 3px rgba(0, 0, 0, 0.34); /* Inner shadow */
  border-radius: 8px;
  transition: transform 0.3s ease-in-out; /* Transition for smooth animation */
}

/* When the checkbox is checked, modify the checkmark appearance */
.container1 input:checked ~ .checkmark {
  transform: translateY(40px); /* Move down */
  animation: wipeDown 0.6s ease-in-out forwards; /* Apply wipe animation */
}

/* When the checkbox is not checked, modify the checkmark appearance */
.container1 input:not(:checked) ~ .checkmark {
  transform: translateY(-40px); /* Move up */
  animation: wipeUp 0.6s ease-in-out forwards; /* Apply wipe animation */
}

/* Keyframes for wipe animations */
@keyframes wipeDown {
  0% {
    transform: translateY(0); /* Starting position */
  }
  100% {
    transform: translateY(40px); /* End position */
  }
}

@keyframes wipeUp {
  0% {
    transform: translateY(40); /* Starting position */
  }
  100% {
    transform: translateY(0px); /* End position */
  }
}

/* Create the checkmark/indicator */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container1 input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container1 .checkmark:before {
  content: "";
  position: absolute;
  left: 8px;
  top: 4px;
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
  box-shadow: 0 4px 2px rgba(0, 0, 0, 0.34); /* Icon drop shadow */
}
